# setup-security.ps1
# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ VendHub –Ω–∞ Windows

Write-Host "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ VendHub..." -ForegroundColor Green
Write-Host "=====================================" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!" -ForegroundColor Red
    Write-Host "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor Yellow
    exit 1
}

# 1. –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
Write-Host "`nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..." -ForegroundColor Yellow
$directories = @(
    "nginx\ssl",
    "scripts\security",
    "monitoring\alerts",
    "backup\database",
    "backup\files",
    "logs\security",
    ".secrets"
)

foreach ($dir in $directories) {
    New-Item -ItemType Directory -Path $dir -Force | Out-Null
    Write-Host "  ‚úì $dir" -ForegroundColor Gray
}

# 2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
Write-Host "`nüìú –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..." -ForegroundColor Yellow
if (-not (Test-Path "nginx\ssl\cert.pem")) {
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é OpenSSL
    $opensslConfig = @"
[req]
default_bits = 2048
prompt = no
default_md = sha256
distinguished_name = dn

[dn]
C=UZ
ST=Tashkent
L=Tashkent
O=VendHub
CN=*.vendhub.uz
"@
    $opensslConfig | Out-File -FilePath "nginx\ssl\openssl.cnf" -Encoding UTF8

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    if (Get-Command openssl -ErrorAction SilentlyContinue) {
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 `
            -keyout nginx\ssl\key.pem `
            -out nginx\ssl\cert.pem `
            -config nginx\ssl\openssl.cnf
        Write-Host "  ‚úì SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ–∑–¥–∞–Ω—ã" -ForegroundColor Green
    } else {
        Write-Host "  ‚ö†Ô∏è OpenSSL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤" -ForegroundColor Yellow
    }
}

# 3. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è Let's Encrypt (–¥–ª—è production)
Write-Host "`nüìÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ Let's Encrypt..." -ForegroundColor Yellow
$letsencryptScript = @'
#!/bin/bash
# scripts/letsencrypt.sh

echo "üìú –ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ Let's Encrypt..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
docker-compose -f docker-compose.production.yml stop nginx

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
docker run -it --rm \
  -v $(pwd)/nginx/ssl:/etc/letsencrypt \
  -v $(pwd)/nginx/ssl:/var/lib/letsencrypt \
  -p 80:80 \
  certbot/certbot \
  certonly --standalone \
  --email ${SSL_EMAIL} \
  --agree-tos \
  --no-eff-email \
  --force-renewal \
  -d vendhub.uz -d www.vendhub.uz -d api.vendhub.uz

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
cp nginx/ssl/live/vendhub.uz/fullchain.pem nginx/ssl/fullchain.pem
cp nginx/ssl/live/vendhub.uz/privkey.pem nginx/ssl/privkey.pem

# –ó–∞–ø—É—Å–∫ nginx
docker-compose -f docker-compose.production.yml start nginx

echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã!"
'@
$letsencryptScript | Out-File -FilePath "scripts\letsencrypt.sh" -Encoding UTF8 -NoNewline

# 4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π
Write-Host "`nüîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π..." -ForegroundColor Yellow

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å—Ç—Ä–æ–∫
function New-RandomPassword {
    param([int]$Length = 32)
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*'
    $password = ''
    $random = New-Object System.Random
    for ($i = 0; $i -lt $Length; $i++) {
        $password += $chars[$random.Next($chars.Length)]
    }
    return $password
}

$secrets = @{
    SECRET_KEY = New-RandomPassword -Length 64
    JWT_SECRET_KEY = New-RandomPassword -Length 64
    DB_PASSWORD = New-RandomPassword -Length 32
    REDIS_PASSWORD = New-RandomPassword -Length 32
    GRAFANA_PASSWORD = New-RandomPassword -Length 16
}

# 5. –°–æ–∑–¥–∞–Ω–∏–µ .env.secure —Ñ–∞–π–ª–∞
Write-Host "`nüìÑ –°–æ–∑–¥–∞–Ω–∏–µ .env.secure —Ñ–∞–π–ª–∞..." -ForegroundColor Yellow
$envContent = @"
# ===== SECURITY KEYS (Generated $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")) =====
SECRET_KEY=$($secrets.SECRET_KEY)
JWT_SECRET_KEY=$($secrets.JWT_SECRET_KEY)
DB_PASSWORD=$($secrets.DB_PASSWORD)
REDIS_PASSWORD=$($secrets.REDIS_PASSWORD)
GRAFANA_PASSWORD=$($secrets.GRAFANA_PASSWORD)

# ===== SSL CONFIGURATION =====
SSL_EMAIL=admin@vendhub.uz
CERTBOT_EMAIL=admin@vendhub.uz

# ===== SECURITY SETTINGS =====
ALLOWED_HOSTS=vendhub.uz,www.vendhub.uz,api.vendhub.uz
CORS_ORIGINS=https://vendhub.uz,https://www.vendhub.uz
SECURE_COOKIES=True
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True

# ===== RATE LIMITING =====
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# ===== MONITORING =====
SENTRY_DSN=your-sentry-dsn-here
ENABLE_PROMETHEUS=True
ENABLE_GRAFANA=True
"@
$envContent | Out-File -FilePath ".env.secure" -Encoding UTF8

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞)
$acl = Get-Acl ".env.secure"
$acl.SetAccessRuleProtection($true, $false)
$accessRule = New-Object System.Security.AccessControl.FileSystemAccessRule(
    [System.Security.Principal.WindowsIdentity]::GetCurrent().Name,
    "FullControl",
    "Allow"
)
$acl.SetAccessRule($accessRule)
Set-Acl ".env.secure" $acl

Write-Host "  ‚úì –§–∞–π–ª .env.secure —Å–æ–∑–¥–∞–Ω —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏" -ForegroundColor Green

# 6. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Windows
Write-Host "`nüíæ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..." -ForegroundColor Yellow
$backupScript = @'
# backup.ps1
# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è VendHub

param(
    [string]$BackupType = "full",
    [string]$Destination = ".\backup"
)

Write-Host "üíæ –ù–∞—á–∞–ª–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è VendHub..." -ForegroundColor Green

$timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
$backupName = "vendhub_backup_$timestamp"
$backupPath = Join-Path $Destination $backupName

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–∞
New-Item -ItemType Directory -Path $backupPath -Force | Out-Null

# 1. –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
Write-Host "üìä –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–º–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker-compose -f docker-compose.production.yml exec -T postgres pg_dump -U vendhub_user vendhub_prod > "$backupPath\database.sql"

# 2. –ë—ç–∫–∞–ø —Ñ–∞–π–ª–æ–≤
Write-Host "üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤..."
Copy-Item -Path "static\uploads" -Destination "$backupPath\uploads" -Recurse -Force
Copy-Item -Path "static\exports" -Destination "$backupPath\exports" -Recurse -Force
Copy-Item -Path ".env" -Destination "$backupPath\.env.backup" -Force

# 3. –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
Write-Host "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞..."
Compress-Archive -Path "$backupPath\*" -DestinationPath "$backupPath.zip" -Force
Remove-Item -Path $backupPath -Recurse -Force

# 4. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
Write-Host "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤..."
Get-ChildItem -Path $Destination -Filter "vendhub_backup_*.zip" | 
    Where-Object { $_.CreationTime -lt (Get-Date).AddDays(-30) } | 
    Remove-Item -Force

Write-Host "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: $backupName.zip" -ForegroundColor Green
'@
$backupScript | Out-File -FilePath "scripts\backup.ps1" -Encoding UTF8

# 7. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è Windows Firewall
Write-Host "`nüî• –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª Windows Firewall..." -ForegroundColor Yellow
$firewallScript = @'
# firewall-setup.ps1
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Windows Firewall –¥–ª—è VendHub

Write-Host "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Windows Firewall..." -ForegroundColor Yellow

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–∞–≤–∏–ª
Remove-NetFirewallRule -DisplayName "VendHub*" -ErrorAction SilentlyContinue

# HTTP
New-NetFirewallRule -DisplayName "VendHub HTTP" `
    -Direction Inbound -Protocol TCP -LocalPort 80 `
    -Action Allow -Profile Any

# HTTPS
New-NetFirewallRule -DisplayName "VendHub HTTPS" `
    -Direction Inbound -Protocol TCP -LocalPort 443 `
    -Action Allow -Profile Any

# PostgreSQL (—Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏)
New-NetFirewallRule -DisplayName "VendHub PostgreSQL" `
    -Direction Inbound -Protocol TCP -LocalPort 5432 `
    -Action Allow -Profile Private -RemoteAddress LocalSubnet

# Redis (—Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏)
New-NetFirewallRule -DisplayName "VendHub Redis" `
    -Direction Inbound -Protocol TCP -LocalPort 6379 `
    -Action Allow -Profile Private -RemoteAddress LocalSubnet

# Grafana
New-NetFirewallRule -DisplayName "VendHub Grafana" `
    -Direction Inbound -Protocol TCP -LocalPort 3001 `
    -Action Allow -Profile Any

# Prometheus
New-NetFirewallRule -DisplayName "VendHub Prometheus" `
    -Direction Inbound -Protocol TCP -LocalPort 9090 `
    -Action Allow -Profile Private

Write-Host "‚úÖ –ü—Ä–∞–≤–∏–ª–∞ Windows Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã" -ForegroundColor Green
'@
$firewallScript | Out-File -FilePath "scripts\firewall-setup.ps1" -Encoding UTF8

# 8. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
Write-Host "`nüìä –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..." -ForegroundColor Yellow
$monitoringScript = @'
# monitor-health.ps1
# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è VendHub

Write-Host "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è VendHub..." -ForegroundColor Green

$services = @(
    @{Name="Backend API"; Url="http://localhost:8000/health"},
    @{Name="Frontend"; Url="http://localhost:3000"},
    @{Name="PostgreSQL"; Port=5432},
    @{Name="Redis"; Port=6379}
)

$allHealthy = $true

foreach ($service in $services) {
    Write-Host -NoNewline "–ü—Ä–æ–≤–µ—Ä–∫–∞ $($service.Name)... "
    
    try {
        if ($service.Url) {
            $response = Invoke-WebRequest -Uri $service.Url -UseBasicParsing -TimeoutSec 5
            if ($response.StatusCode -eq 200) {
                Write-Host "‚úÖ OK" -ForegroundColor Green
            } else {
                Write-Host "‚ùå –û—à–∏–±–∫–∞ (Status: $($response.StatusCode))" -ForegroundColor Red
                $allHealthy = $false
            }
        } elseif ($service.Port) {
            $connection = Test-NetConnection -ComputerName localhost -Port $service.Port -WarningAction SilentlyContinue
            if ($connection.TcpTestSucceeded) {
                Write-Host "‚úÖ OK" -ForegroundColor Green
            } else {
                Write-Host "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
                $allHealthy = $false
            }
        }
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞: $_" -ForegroundColor Red
        $allHealthy = $false
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Host "`n–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

if ($allHealthy) {
    Write-Host "`n‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!" -ForegroundColor Green
} else {
    Write-Host "`n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏!" -ForegroundColor Yellow
}
'@
$monitoringScript | Out-File -FilePath "scripts\monitor-health.ps1" -Encoding UTF8

# 9. –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—ç–∫–∞–ø–∞
Write-Host "`n‚è∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..." -ForegroundColor Yellow
$taskAction = New-ScheduledTaskAction -Execute "PowerShell.exe" `
    -Argument "-NoProfile -ExecutionPolicy Bypass -File `"$(Get-Location)\scripts\backup.ps1`""
$taskTrigger = New-ScheduledTaskTrigger -Daily -At "03:00AM"
$taskSettings = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries

try {
    Register-ScheduledTask -TaskName "VendHub Daily Backup" `
        -Action $taskAction `
        -Trigger $taskTrigger `
        -Settings $taskSettings `
        -Description "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ VendHub" `
        -Force | Out-Null
    Write-Host "  ‚úì –ó–∞–¥–∞—á–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—ç–∫–∞–ø–∞ —Å–æ–∑–¥–∞–Ω–∞" -ForegroundColor Green
} catch {
    Write-Host "  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ" -ForegroundColor Yellow
}

# 10. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
Write-Host "`nüìù –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..." -ForegroundColor Yellow
$securityInstructions = @"
# üõ°Ô∏è –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò VENDHUB

## üîê –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª–µ .env.secure

## üìã –ß–µ–∫-–ª–∏—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:

### 1. SSL –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
   - [ ] –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∏–∑ nginx/ssl/
   - [ ] –î–ª—è production: –∑–∞–ø—É—Å—Ç–∏—Ç–µ scripts/letsencrypt.sh –Ω–∞ Linux —Å–µ—Ä–≤–µ—Ä–µ

### 2. –§–∞–π—Ä–≤–æ–ª
   - [ ] Windows: –∑–∞–ø—É—Å—Ç–∏—Ç–µ scripts/firewall-setup.ps1 –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   - [ ] Linux: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ufw –∏–ª–∏ iptables

### 3. –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
   - [ ] –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ: –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –Ω–∞ 3:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
   - [ ] –†—É—á–Ω–æ–µ: .\scripts\backup.ps1

### 4. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
   - [ ] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è: .\scripts\monitor-health.ps1
   - [ ] Grafana: http://localhost:3001 (admin / —Å–º. GRAFANA_PASSWORD –≤ .env.secure)
   - [ ] Prometheus: http://localhost:9090

### 5. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π
   - [ ] –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–∞—Ä–æ–ª–∏ –∏–∑ .env.secure –≤ –æ—Å–Ω–æ–≤–Ω–æ–π .env —Ñ–∞–π–ª
   - [ ] –£–¥–∞–ª–∏—Ç–µ .env.secure –ø–æ—Å–ª–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
   - [ ] –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∫–æ–º–º–∏—Ç—å—Ç–µ .env —Ñ–∞–π–ª—ã –≤ Git

### 6. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   - [ ] –í–∫–ª—é—á–∏—Ç–µ 2FA –¥–ª—è –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
   - [ ] –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ Docker –æ–±—Ä–∞–∑—ã
   - [ ] –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
   - [ ] –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ VPN –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞–º

## üö® –í–∞–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker scout cves

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ–±—Ä–∞–∑–æ–≤
docker-compose -f docker-compose.production.yml pull
docker-compose -f docker-compose.production.yml up -d

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
docker-compose -f docker-compose.production.yml logs -f nginx | Select-String "error|warn"

## üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤:
- –°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: [–¥–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç]
- –°–ª—É–∂–±–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: [–¥–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç]
"@
$securityInstructions | Out-File -FilePath "SECURITY.md" -Encoding UTF8

# –ò—Ç–æ–≥–æ–≤—ã–π –≤—ã–≤–æ–¥
Write-Host "`n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host "`nüìã –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:" -ForegroundColor Yellow
Write-Host "  ‚úì –°–æ–∑–¥–∞–Ω—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
Write-Host "  ‚úì –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã (—Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ)"
Write-Host "  ‚úì –°–æ–∑–¥–∞–Ω—ã —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏"
Write-Host "  ‚úì –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ"
Write-Host "  ‚úì –°–æ–∑–¥–∞–Ω—ã —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
Write-Host "  ‚úì –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞"

Write-Host "`n‚ö†Ô∏è  –í–ê–ñ–ù–û:" -ForegroundColor Red
Write-Host "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–∞—Ä–æ–ª–∏ –∏–∑ .env.secure –≤ –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π .env —Ñ–∞–π–ª"
Write-Host "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ .\scripts\firewall-setup.ps1 –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
Write-Host "3. –î–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Let's Encrypt —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
Write-Host "4. –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ SECURITY.md –¥–ª—è –ø–æ–ª–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π"

Write-Host "`nüîë –ü–∞—Ä–æ–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: .env.secure" -ForegroundColor Cyan
Write-Host "üõ°Ô∏è –ù–ï –ó–ê–ë–£–î–¨–¢–ï —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ—Å–ª–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π!" -ForegroundColor Red