from aiogram import Router, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession
from src.bot.keyboards.inline import MenuKeyboards
from src.services.user import UserService
from src.db.schemas.user import UserCreate

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_service = UserService(session)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
    user = await user_service.get_by_telegram_id(message.from_user.id)
    
    if not user:
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data = UserCreate(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            full_name=message.from_user.full_name,
            role_names=["operator"]  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–ø–µ—Ä–∞—Ç–æ—Ä
        )
        
        try:
            user = await user_service.create_user(user_data)
            welcome_text = (
                f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VendHub, {message.from_user.first_name}!\n\n"
                "üéâ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.\n"
                "üìã –í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ —Ä–æ–ª—å: <b>–û–ø–µ—Ä–∞—Ç–æ—Ä</b>\n\n"
                "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Ä–æ–ª–µ–π –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
        except Exception as e:
            await message.answer(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
            return
    else:
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        roles_text = ", ".join([role.display_name or role.name for role in user.roles])
        welcome_text = (
            f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.full_name}!\n\n"
            f"üë§ –í–∞—à–∏ —Ä–æ–ª–∏: <b>{roles_text}</b>\n"
            f"üì± –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
        )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    user_roles = [role.name for role in user.roles]
    await message.answer(
        welcome_text,
        reply_markup=MenuKeyboards.main_menu(user_roles)
    )


@router.message(Command("menu"))
async def cmd_menu(message: Message, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    user_service = UserService(session)
    user = await user_service.get_by_telegram_id(message.from_user.id)
    
    if not user:
        await message.answer(
            "‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
        )
        return
    
    user_roles = [role.name for role in user.roles]
    await message.answer(
        "üì± –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=MenuKeyboards.main_menu(user_roles)
    )


@router.message(Command("help"))
async def cmd_help(message: Message):
    """–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É"""
    help_text = """
‚ùì <b>–ü–æ–º–æ—â—å –ø–æ VendHub Bot</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/menu - –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/profile - –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å
/tasks - –ú–æ–∏ –∑–∞–¥–∞—á–∏ (–¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤)
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ

<b>–†–æ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ:</b>
üë∑ <b>–û–ø–µ—Ä–∞—Ç–æ—Ä</b> - –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–æ–≤
üì¶ <b>–°–∫–ª–∞–¥</b> - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∞—Å–∞–º–∏
üíº <b>–ú–µ–Ω–µ–¥–∂–µ—Ä</b> - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –æ—Ç—á–µ—Ç—ã
üíé <b>–ò–Ω–≤–µ—Å—Ç–æ—Ä</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
‚öôÔ∏è <b>–ê–¥–º–∏–Ω</b> - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø

<b>–ù–∞–≤–∏–≥–∞—Ü–∏—è:</b>
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥–æ–π /menu

<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    """
    
    await message.answer(help_text)


@router.callback_query(F.data == "main_menu")
async def callback_main_menu(callback: CallbackQuery, session: AsyncSession):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    user_service = UserService(session)
    user = await user_service.get_by_telegram_id(callback.from_user.id)
    
    if not user:
        await callback.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã", show_alert=True)
        return
    
    user_roles = [role.name for role in user.roles]
    await callback.message.edit_text(
        "üì± –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=MenuKeyboards.main_menu(user_roles)
    )
    await callback.answer()


@router.callback_query(F.data == "profile")
async def callback_profile(callback: CallbackQuery, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_service = UserService(session)
    user = await user_service.get_user_with_stats(callback.from_user.id)
    
    if not user:
        await callback.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã", show_alert=True)
        return
    
    roles_text = ", ".join([role.display_name or role.name for role in user.roles])
    
    profile_text = f"""
üë§ <b>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>

<b>–ò–º—è:</b> {user.full_name}
<b>Username:</b> @{user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}
<b>Telegram ID:</b> <code>{user.telegram_id}</code>
<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {user.phone or '–Ω–µ —É–∫–∞–∑–∞–Ω'}
<b>Email:</b> {user.email or '–Ω–µ —É–∫–∞–∑–∞–Ω'}

<b>–†–æ–ª–∏:</b> {roles_text}
<b>–°—Ç–∞—Ç—É—Å:</b> {'‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' if user.is_active else '‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}
<b>–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è:</b> {'‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω' if user.is_verified else '‚è≥ –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω'}

<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
üè™ –ê–≤—Ç–æ–º–∞—Ç–æ–≤ –ø–æ–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º: {user.managed_machines_count}
üìã –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {user.active_tasks_count}
‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á: {user.completed_tasks_count}
üí∞ –°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π: {user.total_investment:,.0f} UZS

<b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {user.created_at.strftime('%d.%m.%Y')}
    """
    
    await callback.message.edit_text(
        profile_text,
        reply_markup=MenuKeyboards.back_button("main_menu")
    )
    await callback.answer()


@router.callback_query(F.data == "stats")
async def callback_stats(callback: CallbackQuery, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    stats_text = """
üìä <b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

<b>–°–µ–≥–æ–¥–Ω—è:</b>
üí∞ –ü—Ä–æ–¥–∞–∂–∏: 1,234,567 UZS
‚òï –ß–∞—à–µ–∫ –∫–æ—Ñ–µ: 156
üç´ –°–Ω–µ–∫–æ–≤: 89
üìà –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: 7,900 UZS

<b>–≠—Ç–æ—Ç –º–µ—Å—è—Ü:</b>
üí∞ –ü—Ä–æ–¥–∞–∂–∏: 45,678,900 UZS
üìà –†–æ—Å—Ç –∫ –ø—Ä–æ—à–ª–æ–º—É –º–µ—Å—è—Ü—É: +12.5%
üèÜ –õ—É—á—à–∏–π –∞–≤—Ç–æ–º–∞—Ç: VM-001

<b>–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>
‚úÖ –†–∞–±–æ—Ç–∞—é—â–∏—Ö –∞–≤—Ç–æ–º–∞—Ç–æ–≤: 45/50
‚ö†Ô∏è –¢—Ä–µ–±—É—é—Ç –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è: 3
üîß –ù–∞ —Ä–µ–º–æ–Ω—Ç–µ: 2

<i>–û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M')}</i>
    """
    
    await callback.message.edit_text(
        stats_text,
        reply_markup=MenuKeyboards.back_button("main_menu")
    )
    await callback.answer()


@router.callback_query(F.data == "settings")
async def callback_settings(callback: CallbackQuery, session: AsyncSession):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings_text = """
‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>

üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>
‚îú –ù–æ–≤—ã–µ –∑–∞–¥–∞—á–∏: ‚úÖ
‚îú –û—Ç—á–µ—Ç—ã: ‚úÖ
‚îî –°–∏—Å—Ç–µ–º–Ω—ã–µ: ‚úÖ

üåê <b>–Ø–∑—ã–∫:</b> üá∑üá∫ –†—É—Å—Å–∫–∏–π

üïê <b>–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å:</b> UTC+5 (–¢–∞—à–∫–µ–Ω—Ç)

üì± <b>–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å:</b>
‚îî –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º: ‚ùå

<i>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</i>
    """
    
    await callback.message.edit_text(
        settings_text,
        reply_markup=MenuKeyboards.back_button("main_menu")
    )
    await callback.answer()


@router.callback_query(F.data == "help")
async def callback_help(callback: CallbackQuery):
    """–ü–æ–º–æ—â—å —á–µ—Ä–µ–∑ callback"""
    await callback_help_handler(callback)


@router.message(Command("cancel"))
async def cmd_cancel(message: Message, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
    current_state = await state.get_state()
    if current_state is None:
        await message.answer("–ù–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å.")
        return
    
    await state.clear()
    await message.answer(
        "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=MenuKeyboards.back_button("main_menu")
    )


async def callback_help_handler(callback: CallbackQuery):
    """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏"""
    help_text = """
‚ùì <b>–ü–æ–º–æ—â—å –ø–æ VendHub Bot</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/menu - –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/profile - –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å
/tasks - –ú–æ–∏ –∑–∞–¥–∞—á–∏ (–¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤)
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ

<b>–†–æ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ:</b>
üë∑ <b>–û–ø–µ—Ä–∞—Ç–æ—Ä</b> - –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–æ–≤
üì¶ <b>–°–∫–ª–∞–¥</b> - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∞—Å–∞–º–∏
üíº <b>–ú–µ–Ω–µ–¥–∂–µ—Ä</b> - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –æ—Ç—á–µ—Ç—ã
üíé <b>–ò–Ω–≤–µ—Å—Ç–æ—Ä</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
‚öôÔ∏è <b>–ê–¥–º–∏–Ω</b> - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø

<b>–ù–∞–≤–∏–≥–∞—Ü–∏—è:</b>
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥–æ–π /menu

<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    """
    
    await callback.message.edit_text(
        help_text,
        reply_markup=MenuKeyboards.back_button("main_menu")
    )
    await callback.answer()