# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
Set-Location "D:\Projects\VHM 1.0"

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
$exceptionsContent = @'
from typing import Any, Dict, Optional
from fastapi import HTTPException


class VendHubException(HTTPException):
    """–ë–∞–∑–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ VendHub"""
    
    def __init__(
        self,
        status_code: int,
        error_code: str,
        message: str,
        details: Optional[Dict[str, Any]] = None
    ):
        self.error_code = error_code
        self.message = message
        self.details = details or {}
        super().__init__(status_code=status_code, detail=message)


# Authentication & Authorization
class AuthenticationError(VendHubException):
    """–û—à–∏–±–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    
    def __init__(self, message: str = "–ù–µ —É–¥–∞–ª–æ—Å—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"):
        super().__init__(
            status_code=401,
            error_code="AUTHENTICATION_ERROR",
            message=message
        )


class AuthorizationError(VendHubException):
    """–û—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    
    def __init__(self, message: str = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏"):
        super().__init__(
            status_code=403,
            error_code="AUTHORIZATION_ERROR",
            message=message
        )


class InvalidTokenError(AuthenticationError):
    """–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω"""
    
    def __init__(self, message: str = "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∏–ª–∏ –∏—Å—Ç–µ–∫—à–∏–π —Ç–æ–∫–µ–Ω"):
        super().__init__(message)
        self.error_code = "INVALID_TOKEN"


class UserNotFoundError(VendHubException):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"""
    
    def __init__(self, message: str = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"):
        super().__init__(
            status_code=404,
            error_code="USER_NOT_FOUND",
            message=message
        )


# Business Logic Errors
class MachineNotFoundError(VendHubException):
    """–ê–≤—Ç–æ–º–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"""
    
    def __init__(self, machine_code: str = None):
        message = f"–ê–≤—Ç–æ–º–∞—Ç {machine_code} –Ω–µ –Ω–∞–π–¥–µ–Ω" if machine_code else "–ê–≤—Ç–æ–º–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
        super().__init__(
            status_code=404,
            error_code="MACHINE_NOT_FOUND",
            message=message
        )


class MachineInactiveError(VendHubException):
    """–ê–≤—Ç–æ–º–∞—Ç –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"""
    
    def __init__(self, machine_code: str = None):
        message = f"–ê–≤—Ç–æ–º–∞—Ç {machine_code} –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω" if machine_code else "–ê–≤—Ç–æ–º–∞—Ç –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
        super().__init__(
            status_code=400,
            error_code="MACHINE_INACTIVE",
            message=message
        )


class InsufficientInventoryError(VendHubException):
    """–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—Å—Ç–∞—Ç–∫–æ–≤"""
    
    def __init__(self, ingredient_name: str = None, required: float = None, available: float = None):
        if ingredient_name and required and available:
            message = f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ {ingredient_name}: —Ç—Ä–µ–±—É–µ—Ç—Å—è {required}, –¥–æ—Å—Ç—É–ø–Ω–æ {available}"
        else:
            message = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—Å—Ç–∞—Ç–∫–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏"
        
        super().__init__(
            status_code=400,
            error_code="INSUFFICIENT_INVENTORY",
            message=message,
            details={
                "ingredient": ingredient_name,
                "required": required,
                "available": available
            }
        )


class DuplicateCodeError(VendHubException):
    """–î—É–±–ª–∏–∫–∞—Ç –∫–æ–¥–∞"""
    
    def __init__(self, entity_type: str, code: str):
        super().__init__(
            status_code=400,
            error_code="DUPLICATE_CODE",
            message=f"{entity_type} —Å –∫–æ–¥–æ–º {code} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        )


# Validation Errors
class ValidationError(VendHubException):
    """–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
    
    def __init__(self, message: str, field: str = None):
        super().__init__(
            status_code=422,
            error_code="VALIDATION_ERROR",
            message=message,
            details={"field": field} if field else {}
        )


class InvalidDateRangeError(ValidationError):
    """–ù–µ–≤–µ—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç"""
    
    def __init__(self, message: str = "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è"):
        super().__init__(message)
        self.error_code = "INVALID_DATE_RANGE"


class InvalidAmountError(ValidationError):
    """–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞"""
    
    def __init__(self, message: str = "–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π"):
        super().__init__(message)
        self.error_code = "INVALID_AMOUNT"


# File & Upload Errors
class FileUploadError(VendHubException):
    """–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞"""
    
    def __init__(self, message: str = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞"):
        super().__init__(
            status_code=400,
            error_code="FILE_UPLOAD_ERROR",
            message=message
        )


class FileTooLargeError(FileUploadError):
    """–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π"""
    
    def __init__(self, max_size_mb: int):
        super().__init__(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç {max_size_mb} –ú–ë")
        self.error_code = "FILE_TOO_LARGE"


class UnsupportedFileTypeError(FileUploadError):
    """–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞"""
    
    def __init__(self, file_type: str, supported_types: list):
        super().__init__(
            f"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞: {file_type}. "
            f"–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã: {', '.join(supported_types)}"
        )
        self.error_code = "UNSUPPORTED_FILE_TYPE"


# Database Errors
class DatabaseError(VendHubException):
    """–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    def __init__(self, message: str = "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"):
        super().__init__(
            status_code=500,
            error_code="DATABASE_ERROR",
            message=message
        )


class RecordNotFoundError(VendHubException):
    """–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"""
    
    def __init__(self, entity_type: str = "–ó–∞–ø–∏—Å—å", entity_id: Any = None):
        message = f"{entity_type} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        if entity_id:
            message += f" (ID: {entity_id})"
        
        super().__init__(
            status_code=404,
            error_code="RECORD_NOT_FOUND",
            message=message
        )


class RecordAlreadyExistsError(VendHubException):
    """–ó–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"""
    
    def __init__(self, entity_type: str = "–ó–∞–ø–∏—Å—å"):
        super().__init__(
            status_code=409,
            error_code="RECORD_ALREADY_EXISTS",
            message=f"{entity_type} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        )


# External Service Errors
class ExternalServiceError(VendHubException):
    """–û—à–∏–±–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞"""
    
    def __init__(self, service_name: str, message: str = None):
        default_message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —Å–µ—Ä–≤–∏—Å—É {service_name}"
        super().__init__(
            status_code=502,
            error_code="EXTERNAL_SERVICE_ERROR",
            message=message or default_message
        )


class PaymentServiceError(ExternalServiceError):
    """–û—à–∏–±–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞"""
    
    def __init__(self, service_name: str, message: str = None):
        super().__init__(service_name, message)
        self.error_code = "PAYMENT_SERVICE_ERROR"


class FiscalServiceError(ExternalServiceError):
    """–û—à–∏–±–∫–∞ —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞"""
    
    def __init__(self, message: str = "–û—à–∏–±–∫–∞ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏"):
        super().__init__("Fiscal Service", message)
        self.error_code = "FISCAL_SERVICE_ERROR"


# Configuration Errors
class ConfigurationError(VendHubException):
    """–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    
    def __init__(self, message: str = "–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"):
        super().__init__(
            status_code=500,
            error_code="CONFIGURATION_ERROR",
            message=message
        )


class MissingEnvironmentVariableError(ConfigurationError):
    """–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    
    def __init__(self, var_name: str):
        super().__init__(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: {var_name}")
        self.error_code = "MISSING_ENV_VAR"


# Rate Limiting
class RateLimitExceededError(VendHubException):
    """–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤"""
    
    def __init__(self, message: str = "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤"):
        super().__init__(
            status_code=429,
            error_code="RATE_LIMIT_EXCEEDED",
            message=message
        )


# Maintenance
class MaintenanceModeError(VendHubException):
    """–†–µ–∂–∏–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è"""
    
    def __init__(self, message: str = "–°–∏—Å—Ç–µ–º–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è"):
        super().__init__(
            status_code=503,
            error_code="MAINTENANCE_MODE",
            message=message
        )
'@

# –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
$exceptionsContent | Out-File -FilePath "src\core\exceptions.py" -Encoding UTF8

Write-Host "‚úÖ –§–∞–π–ª src\core\exceptions.py —Å–æ–∑–¥–∞–Ω!" -ForegroundColor Green
Write-Host "üìÑ –°–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è VendHub" -ForegroundColor Yellow
Write-Host "üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $((Get-Item "src\core\exceptions.py").Length) –±–∞–π—Ç" -ForegroundColor Cyan